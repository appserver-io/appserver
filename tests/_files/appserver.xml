<?xml version="1.0" encoding="UTF-8"?>
<appserver xmlns="http://www.appserver.io/appserver">
	<initialContext type="TechDivision\ApplicationServer\InitialContext">
		<description><![CDATA[The initial context configuration.]]></description>
		<classLoader type="TechDivision\ApplicationServer\SplClassLoader"/>
		<storage type="TechDivision\ApplicationServer\Mock\InitialContext\MockStorage"/>
	</initialContext>
	
	<systemLogger type="Monolog\Logger" channelName="system">
		<processors>
			<processor type="Monolog\Processor\MemoryUsageProcessor">
				<params>
					<param name="realUsage" type="boolean">true</param>
				</params>
			</processor>
		</processors>
		<handlers>
			<handler type="Monolog\Handler\ErrorLogHandler">
				<formatter type="Monolog\Formatter\LineFormatter">
					<params>
						<param name="output" type="string"><![CDATA[[%datetime%] %channel%.%level_name%: %message% %context% %extra%\n]]></param>
						<param name="dateFormat" type="string"><![CDATA[Y-m-d H:i:s]]></param>
					</params>
				</formatter>
				<params>
					<param name="messageType" type="integer">ErrorLogHandler::OPERATING_SYSTEM</param>
					<param name="level" type="integer">Logger::DEBUG"</param>
					<param name="bubble" type="boolean">true</param>
				</params>
			</handler>
		</handlers>
	</systemLogger>
	
    <containers>

        <container threadType="TechDivision\ApplicationServer\Mock\MockContainerThread" type="TechDivision\PersistenceContainer\Container">
			<description><![CDATA[This is an example of a container that uses a socket for sending and receiving messages. This solution can be used for clients connecting over a network.]]></description>
            <receiver type="TechDivision\ApplicationServer\Socket\Receiver">
                <worker type="TechDivision\ApplicationServer\Socket\Worker"/>
                <thread type="TechDivision\ApplicationServer\Mock\Socket\MockRequest"/>
				<params>
					<param name="workerNumber" type="integer">16</param>
					<param name="address" type="string">0.0.0.0</param>
					<param name="port" type="integer">8585</param>
				</params>
            </receiver>
            <deployment type="TechDivision\PersistenceContainer\Deployment"/>
            <host name="localhost"
                  appBase="/webapps"
                  serverAdmin="${appserver.admin.email}"
                  serverSoftware="appserver/${appserver.version} (${os.family}) PHP/${appserver.php.version}">
            </host>
        </container>
        
        <container threadType="TechDivision\ApplicationServer\Mock\MockContainerThread" type="TechDivision\ServletContainer\Container">
			<description><![CDATA[This is an example of a servlet container that uses a socket for sending and receiving HTML requests/responses. This solution can be used for running a web server.]]></description>
            <receiver type="TechDivision\ApplicationServer\Socket\Receiver">
                <worker type="TechDivision\ApplicationServer\Socket\Worker"/>
                <thread type="TechDivision\ApplicationServer\Mock\Socket\MockRequest"/>
				<params>
					<param name="workerNumber" type="integer">16</param>
					<param name="address" type="string">0.0.0.0</param>
					<param name="port" type="integer">8586</param>
				</params>
            </receiver>
            <deployment type="TechDivision\ServletContainer\Deployment"/>
            <host name="localhost"
                  appBase="/webapps"
                  serverAdmin="${appserver.admin.email}"
                  serverSoftware="appserver/${appserver.version} (${os.family}) PHP/${appserver.php.version}">
                <vhosts>
                    <vhost name="www.appserver.io" appBase="/site">
                        <aliases>
                            <alias>appserver.io</alias>
                            <alias>appserver.local</alias>
                        </aliases>
                    </vhost>
                    <vhost name="magento.local" appBase="/magento" />
                </vhosts>
            </host>
        </container>

        <container threadType="TechDivision\ApplicationServer\Mock\MockContainerThread" type="TechDivision\MessageQueue\Container">
			<description><![CDATA[This is an example of a message queue that uses a socket to receive messages. This solution can be used for clients connecting over a network.]]></description>
            <receiver type="TechDivision\ApplicationServer\Socket\Receiver">
                <worker type="TechDivision\ApplicationServer\Socket\Worker"/>
                <thread type="TechDivision\ApplicationServer\Mock\Socket\MockRequest"/>
				<params>
					<param name="workerNumber" type="integer">16</param>
					<param name="address" type="string">0.0.0.0</param>
					<param name="port" type="integer">8587</param>
				</params>
            </receiver>
            <deployment type="TechDivision\MessageQueue\Deployment"/>
            <host name="localhost"
                  appBase="/webapps"
                  serverAdmin="${appserver.admin.email}"
                  serverSoftware="appserver/${appserver.version} (${os.family}) PHP/${appserver.php.version}">
            </host>
        </container>
        
    </containers>

</appserver>